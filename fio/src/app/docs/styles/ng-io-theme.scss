@import '~@angular/material/core/theming/all-theme';
// Plus imports for other components in your app.

// Include the base styles for Angular Material core. We include this here so that you only
// have to load a single css file for Angular Material in your app.
@include mat-core();


 $mat-fio: (
  50: #6AE048,
  100: #5FDB55,
  200: #54D563,
  300: #49D070,
  400: #3DCA80,
  500: #33C58C,
  600: #27BF99,
  700: #1FBBA2,
  800: #19B8AC,
  900: #0BAB9F,
  A100: #59D85D,
  A200: #59D85D,
  A400: #59D85D,
  A700: #59D85D,
  contrast: (
    50: #4A4A4A,
    100: #4A4A4A,
    200: #4A4A4A,
    300: #4A4A4A,
    400: #4A4A4A,
    500: white,
    600: white,
    700: white,
    800: $white-87-opacity,
    900: $white-87-opacity,
    A100: #4A4A4A,
    A200: white,
    A400: white,
    A700: white,
  )
);



// Define the palettes for your theme using the Material Design palettes available in palette.scss
// (imported above). For each palette, you can optionally specify a default, lighter, and darker
// hue.
$ng-io-primary: mat-palette($mat-fio, 700, 600, 800);
$ng-io-accent:  mat-palette($mat-red, 700, 600, 800);

// The warn palette is optional (defaults to red).
$ng-io-warn:    mat-palette($mat-red);

// Create the theme object (a Sass map containing all of the palettes).
$ng-io-theme: mat-light-theme($ng-io-primary, $ng-io-accent, $ng-io-warn);

// Include theme styles for core and each component used in your app.
// Alternatively, you can import and @include the theme mixins for each component
// that you are using.
@include angular-material-theme($ng-io-theme);

//TODO: define custom theme, old values from Style guide:
// @material-header: #455A64;
// @material-header-darker: #37474F;
// @material-header-dark: #263238;
// @material-200: #EEEEEE;
// @material-700: #616161;
// @material-800: #424242;
// @material-900: #212121;
// @black: #000000;
// @white: #FFFFFF;
